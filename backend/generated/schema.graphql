### This file was autogenerated by Nexus 0.11.6
### Do not make changes to this file directly


scalar DateTime

type Essay {
  author: User!
  createdAt: DateTime!
  id: ID!
  text: String!
  topic: EssayTopic!
  updatedAt: DateTime!
}

enum EssayOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  text_ASC
  text_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type EssayTopic {
  createdAt: DateTime!
  currentUserAnswer: Essay
  description: String!
  id: ID!
  max_words: Int!
  min_words: Int!
  title: String!
  updatedAt: DateTime!
}

input EssayTopicWhereInput {
  AND: [EssayTopicWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  max_words: Int
  max_words_gt: Int
  max_words_gte: Int
  max_words_in: [Int!]
  max_words_lt: Int
  max_words_lte: Int
  max_words_not: Int
  max_words_not_in: [Int!]
  min_words: Int
  min_words_gt: Int
  min_words_gte: Int
  min_words_in: [Int!]
  min_words_lt: Int
  min_words_lte: Int
  min_words_not: Int
  min_words_not_in: [Int!]
  NOT: [EssayTopicWhereInput!]
  OR: [EssayTopicWhereInput!]
  title: String
  title_contains: String
  title_ends_with: String
  title_gt: String
  title_gte: String
  title_in: [String!]
  title_lt: String
  title_lte: String
  title_not: String
  title_not_contains: String
  title_not_ends_with: String
  title_not_in: [String!]
  title_not_starts_with: String
  title_starts_with: String
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

input EssayWhereInput {
  AND: [EssayWhereInput!]
  author: UserWhereInput
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [EssayWhereInput!]
  OR: [EssayWhereInput!]
  text: String
  text_contains: String
  text_ends_with: String
  text_gt: String
  text_gte: String
  text_in: [String!]
  text_lt: String
  text_lte: String
  text_not: String
  text_not_contains: String
  text_not_ends_with: String
  text_not_in: [String!]
  text_not_starts_with: String
  text_starts_with: String
  topic: EssayTopicWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type Mutation {
  chooseSlot(id: ID): User!
  saveEssay(text: String, topicId: ID): EssayTopic!
}

type Query {
  currentUser(email: String): User!
  essayTopics: [EssayTopic!]!
  ownEssay(id: ID): Essay!
  slots: [Slot!]!
  user(where: UserWhereUniqueInput!): User
  users: [User!]!
}

type Slot {
  capacity: Int!
  createdAt: DateTime!
  ends_at: DateTime!
  id: ID!
  registered(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): [User!]
  registered_count: Int!
  starts_at: DateTime!
  updatedAt: DateTime!
}

input SlotWhereInput {
  AND: [SlotWhereInput!]
  capacity: Int
  capacity_gt: Int
  capacity_gte: Int
  capacity_in: [Int!]
  capacity_lt: Int
  capacity_lte: Int
  capacity_not: Int
  capacity_not_in: [Int!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  ends_at: DateTime
  ends_at_gt: DateTime
  ends_at_gte: DateTime
  ends_at_in: [DateTime!]
  ends_at_lt: DateTime
  ends_at_lte: DateTime
  ends_at_not: DateTime
  ends_at_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [SlotWhereInput!]
  OR: [SlotWhereInput!]
  registered_every: UserWhereInput
  registered_none: UserWhereInput
  registered_some: UserWhereInput
  starts_at: DateTime
  starts_at_gt: DateTime
  starts_at_gte: DateTime
  starts_at_in: [DateTime!]
  starts_at_lt: DateTime
  starts_at_lte: DateTime
  starts_at_not: DateTime
  starts_at_not_in: [DateTime!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type User {
  administrator: Boolean!
  createdAt: DateTime!
  email: String!
  essays(after: String, before: String, first: Int, last: Int, orderBy: EssayOrderByInput, skip: Int, where: EssayWhereInput): [Essay!]
  first_name: String
  id: ID!
  last_name: String
  slot: Slot
  updatedAt: DateTime!
  upstream_id: Int!
}

enum UserOrderByInput {
  administrator_ASC
  administrator_DESC
  createdAt_ASC
  createdAt_DESC
  email_ASC
  email_DESC
  first_name_ASC
  first_name_DESC
  id_ASC
  id_DESC
  last_name_ASC
  last_name_DESC
  updatedAt_ASC
  updatedAt_DESC
  upstream_id_ASC
  upstream_id_DESC
}

input UserWhereInput {
  administrator: Boolean
  administrator_not: Boolean
  AND: [UserWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  essays_every: EssayWhereInput
  essays_none: EssayWhereInput
  essays_some: EssayWhereInput
  first_name: String
  first_name_contains: String
  first_name_ends_with: String
  first_name_gt: String
  first_name_gte: String
  first_name_in: [String!]
  first_name_lt: String
  first_name_lte: String
  first_name_not: String
  first_name_not_contains: String
  first_name_not_ends_with: String
  first_name_not_in: [String!]
  first_name_not_starts_with: String
  first_name_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  last_name: String
  last_name_contains: String
  last_name_ends_with: String
  last_name_gt: String
  last_name_gte: String
  last_name_in: [String!]
  last_name_lt: String
  last_name_lte: String
  last_name_not: String
  last_name_not_contains: String
  last_name_not_ends_with: String
  last_name_not_in: [String!]
  last_name_not_starts_with: String
  last_name_starts_with: String
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  slot: SlotWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  upstream_id: Int
  upstream_id_gt: Int
  upstream_id_gte: Int
  upstream_id_in: [Int!]
  upstream_id_lt: Int
  upstream_id_lte: Int
  upstream_id_not: Int
  upstream_id_not_in: [Int!]
}

input UserWhereUniqueInput {
  id: ID
  upstream_id: Int
}
